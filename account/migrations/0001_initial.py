# Generated by Django 2.2.6 on 2019-10-26 16:35

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BonusType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(default=0, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=60, null=True)),
                ('last_name', models.CharField(max_length=60, null=True)),
                ('middle_name', models.CharField(max_length=60, null=True)),
                ('email', models.CharField(max_length=60, null=True)),
                ('phone', models.CharField(max_length=60, null=True)),
                ('city', models.CharField(max_length=60, null=True)),
                ('country', models.CharField(max_length=60, null=True)),
                ('address', models.CharField(max_length=60, null=True)),
                ('status', models.IntegerField(default=0, null=True)),
                ('bonus', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True)),
                ('step', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('inviter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='invited_children', to='account.Node')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='account.Node')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Nodes',
            },
        ),
        migrations.CreateModel(
            name='BonusSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('level', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('bonus_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.BonusType')),
            ],
        ),
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('type', models.CharField(blank=True, max_length=60, null=True)),
                ('created_date', models.DateTimeField(auto_now=True, null=True)),
                ('node', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bonus_node', to='account.Node')),
                ('partner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bonus_partner', to='account.Node')),
            ],
        ),
    ]
